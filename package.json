{
  "publisher": "amaranth-lang",
  "name": "rtl-debugger",
  "displayName": "RTL Debugger",
  "description": "Debugger for HDLs supported by the open-source toolchain: Amaranth, Verilog, VHDL, ...",
  "license": "(ISC AND EUPL-1.2)",
  "version": "0.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/amaranth-lang/rtl-debugger"
  },
  "categories": [
    "Debuggers"
  ],
  "engines": {
    "vscode": "^1.94.0"
  },
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "id": "RTLDebugger",
      "type": "object",
      "title": "RTL Debugger",
      "$comment": "UPSTREAM: Unfortunately there is no way to control the formatting of the extension name within the setting title. See microsoft/vscode#103592",
      "properties": {
        "rtlDebugger.command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "Specifies the command to run when launching a debug session."
        },
        "rtlDebugger.cwd": {
          "type": "string",
          "default": "${workspaceFolder}",
          "description": "Specifies the working directory for the launch command."
        },
        "rtlDebugger.env": {
          "type": "object",
          "patternProperties": {
            "": "string"
          },
          "default": {},
          "description": "Specifies the environment for the launch command."
        },
        "rtlDebugger.port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "default": 6618,
          "description": "Specifies the port that the CXXRTL agent within the debug session is listening at."
        },
        "rtlDebugger.displayStyle": {
          "enum": [
            "Verilog",
            "VHDL",
            "Python"
          ],
          "default": "Verilog",
          "markdownDescription": "Specifies the display format for variables."
        },
        "rtlDebugger.variableOptions": {
          "type": "object",
          "patternProperties": {
            "": {
              "type": "object",
              "properties": {
                "radix": "number"
              }
            }
          }
        },
        "rtlDebugger.watchList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "row": {"type": "integer"},
              "bit": {"type": "integer"}
            },
            "required": ["id"],
            "additionalProperties": false
          },
          "description": "Specifies the list of variables being watched separately."
        }
      }
    },
    "commands": [
      {
        "command": "rtlDebugger.startSession",
        "category": "RTL Debugger",
        "title": "Start Session",
        "icon": "$(debug-start)"
      },
      {
        "command": "rtlDebugger.stopSession",
        "category": "RTL Debugger",
        "title": "Stop Session",
        "icon": "$(debug-stop)"
      },
      {
        "command": "rtlDebugger.runSimulation",
        "category": "RTL Debugger",
        "title": "Run Simulation"
      },
      {
        "command": "rtlDebugger.runSimulationUntil",
        "category": "RTL Debugger",
        "title": "Run Simulation Until..."
      },
      {
        "command": "rtlDebugger.pauseSimulation",
        "category": "RTL Debugger",
        "title": "Pause Simulation",
        "icon": "$(debug-pause)"
      },
      {
        "command": "rtlDebugger.continueForward",
        "category": "RTL Debugger",
        "title": "Continue Forward",
        "icon": "$(debug-continue)"
      },
      {
        "command": "rtlDebugger.stepForward",
        "category": "RTL Debugger",
        "title": "Step Forward",
        "icon": "$(debug-step-over)"
      },
      {
        "command": "rtlDebugger.stepBackward",
        "category": "RTL Debugger",
        "title": "Step Backward",
        "icon": "$(debug-step-back)"
      },
      {
        "command": "rtlDebugger.goToTime",
        "category": "RTL Debugger",
        "title": "Go to Time..."
      },
      {
        "command": "rtlDebugger.setRadix.2",
        "category": "RTL Debugger",
        "title": "Use Radix 2"
      },
      {
        "command": "rtlDebugger.setRadix.8",
        "category": "RTL Debugger",
        "title": "Use Radix 8"
      },
      {
        "command": "rtlDebugger.setRadix.10",
        "category": "RTL Debugger",
        "title": "Use Radix 10"
      },
      {
        "command": "rtlDebugger.setRadix.16",
        "category": "RTL Debugger",
        "title": "Use Radix 16"
      },
      {
        "command": "rtlDebugger.watchVariable",
        "category": "RTL Debugger",
        "title": "Watch Variable",
        "icon": "$(eye-watch)"
      },
      {
        "command": "rtlDebugger.unWatchVariable",
        "category": "RTL Debugger",
        "title": "Stop Watching",
        "icon": "$(remove)"
      },
      {
        "command": "rtlDebugger.browseWaveforms",
        "category": "RTL Debugger",
        "title": "Browse Waveforms"
      },
      {
        "command": "rtlDebugger.addToWaveform",
        "category": "RTL Debugger",
        "title": "Add to Waveform",
        "icon": "$(keybindings-add)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "rtlDebugger",
          "title": "RTL Debugger",
          "icon": "media/chip-debug.svg"
        }
      ]
    },
    "views": {
      "rtlDebugger": [
        {
          "id": "rtlDebugger.sidebar",
          "name": "Session"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "rtlDebugger.sidebar",
        "contents": "The debug session is not running.\n[Start Session](command:rtlDebugger.startSession)",
        "when": "rtlDebugger.sessionStatus == absent"
      },
      {
        "view": "rtlDebugger.sidebar",
        "contents": "The debug session is initializing...",
        "when": "rtlDebugger.sessionStatus == starting"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "rtlDebugger.startSession",
          "when": "rtlDebugger.sessionStatus == absent"
        },
        {
          "command": "rtlDebugger.stopSession",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.runSimulation",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == paused"
        },
        {
          "command": "rtlDebugger.runSimulationUntil",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == paused"
        },
        {
          "command": "rtlDebugger.pauseSimulation",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == running"
        },
        {
          "command": "rtlDebugger.continueForward",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.stepForward",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.stepBackward",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.goToTime",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.setRadix.2",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.setRadix.8",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.setRadix.10",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.setRadix.16",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.watchVariable",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.unWatchVariable",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.browseWaveforms",
          "when": "rtlDebugger.sessionStatus == running"
        }
      ],
      "view/title": [
        {
          "command": "rtlDebugger.stepBackward",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == running",
          "group": "navigation@1"
        },
        {
          "command": "rtlDebugger.stepForward",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == running",
          "group": "navigation@2"
        },
        {
          "command": "rtlDebugger.continueForward",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus != running",
          "group": "navigation@3"
        },
        {
          "command": "rtlDebugger.pauseSimulation",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == running",
          "group": "navigation@4"
        },
        {
          "command": "rtlDebugger.startSession",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == absent",
          "group": "navigation@10"
        },
        {
          "command": "rtlDebugger.stopSession",
          "when": "view == rtlDebugger.sidebar && rtlDebugger.sessionStatus == running",
          "group": "navigation@11"
        }
      ],
      "view/item/context": [
        {
          "submenu": "rtlDebugger.setRadix",
          "when": "view == rtlDebugger.sidebar && viewItem =~ /canSetRadix/"
        },
        {
          "command": "rtlDebugger.watchVariable",
          "when": "view == rtlDebugger.sidebar && viewItem =~ /canWatch/",
          "group": "inline"
        },
        {
          "command": "rtlDebugger.unWatchVariable",
          "when": "view == rtlDebugger.sidebar && viewItem =~ /inWatchList/",
          "group": "inline"
        },
        {
          "command": "rtlDebugger.addToWaveform",
          "when": "view == rtlDebugger.sidebar",
          "group": "inline"
        }
      ],
      "rtlDebugger.setRadix": [
        {
          "command": "rtlDebugger.setRadix.2",
          "group": "radix@2"
        },
        {
          "command": "rtlDebugger.setRadix.8",
          "group": "radix@8"
        },
        {
          "command": "rtlDebugger.setRadix.10",
          "group": "radix@10"
        },
        {
          "command": "rtlDebugger.setRadix.16",
          "group": "radix@16"
        }
      ]
    },
    "submenus": [
      {
        "id": "rtlDebugger.setRadix",
        "label": "Radix"
      }
    ]
  },
  "scripts": {
    "lint": "eslint --fix",
    "tsc": "tsc --project tsconfig.json",
    "tsc:watch": "npm run tsc -- --watch",
    "esbuild": "node build.mjs build",
    "esbuild:watch": "node build.mjs watch",
    "vscode:prepublish": "npm run lint && npm run tsc && npm run esbuild",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.94",
    "@types/vscode-webview": "^1.57",
    "@stylistic/eslint-plugin": "^2.9.0",
    "@typescript-eslint/eslint-plugin": "^8",
    "@typescript-eslint/parser": "^8",
    "@vscode/vsce": "^3.x",
    "esbuild": "^0.24",
    "eslint": "^9.12",
    "typescript": "5.5.x",
    "libsurfer": "file:vendor/surfer/libsurfer/pkg",
    "@chialab/esbuild-plugin-meta-url": "^0.18"
  }
}
